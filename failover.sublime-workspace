{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"he",
				"heart_beat_accept_fail"
			],
			[
				"l",
				"lamret	Lambda - Explicit return declaration"
			],
			[
				"re",
				"returns	-> decltype(…)"
			],
			[
				"la",
				"lammin	Lambda - Minimal"
			],
			[
				"f",
				"Func	 Ɩ"
			],
			[
				"t",
				"test	X ν"
			],
			[
				"se",
				"semantic"
			],
			[
				"lua_",
				"lua_pcall"
			],
			[
				"s",
				"str	<-chan string ν"
			],
			[
				"fu",
				"func (*Event)	func (...) {...} ʂ"
			],
			[
				"sta",
				"stage1"
			],
			[
				"inc",
				"include"
			],
			[
				"ar",
				"argv"
			],
			[
				"e",
				"extra_tag_paths"
			],
			[
				"in",
				"include"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "#include <iostream>\n#include <netinet/in.h>\n#include <arpa/inet.h>\n#include <sys/select.h>\n#include <errno.h>\n#include <strings.h>\n#include <unistd.h>\n\n#include \"util.h\"\n#include \"net_util.h\"\n#include \"config.h\"\n\nusing namespace std;\n\nint needSend = 1;\n\nint heartbeat_receive_loop(int rfd) {\n    fd_set rfds;\n    int ret = -1;\n    char buffer[16];\n\n    while(1) {\n        ret = select_with_timeout(rfd, &rfds, 2);\n        if(ret <= 0) {\n            break;\n        }\n        if(!FD_ISSET(rfd, &rfds)) {\n            break;\n        }\n\n        ret = recv(rfd, buffer, 16, 0);\n        if(ret != 16) {\n            break;\n        }\n        cout << \"recv succeed\\n\";\n        sleep(1);\n    }\n\n    return ret;\n}\n\nint heartbeat_send_loop(int wfd) {\n    fd_set wfds; \n    int ret = -1;\n    char buffer[16];\n\n    while(1) {\n        sleep(1);\n        if(!needSend) {\n            break;\n        }\n        ret = select_write_with_timeout(wfd, &wfds, 5);\n        if(ret <= 0) {\n            break;\n        }\n        if(!FD_ISSET(wfd, &wfds)) {\n            break;\n        }\n\n        ret = send(wfd, buffer, 16, MSG_NOSIGNAL);\n        DEBUG(\"errno = %d\\n\", errno);\n        if(ret != 16) {\n            break;\n        }\n        cout << \"send succeed\\n\";\n    }\n\n    return ret;\n}\n\nvoid heartbeat_receive() {\n    int sockfd;\n    int ret;\n    int status = 0;\n    fd_set rfds;\n\n    struct sockaddr_in cli_addr;\n    socklen_t cli_len;\n    cli_len = sizeof(cli_addr);\n\n    sockfd = socket(AF_INET, SOCK_STREAM, 0);\n    if ((sockfd) < 0) {\n        perror(\"ERROR opening socket\");\n        ERROR(\"%d\\n\", __LINE__);\n    }\n\n    int __jun_net_optval = 1;\n    if(setsockopt((sockfd), SOL_SOCKET, SO_REUSEADDR, &__jun_net_optval, sizeof __jun_net_optval) < 0) {\n        perror(\"errno on setsockopt\");         \n        ERROR(\"%d\\n\", __LINE__);    \n    }  \n\n    struct sockaddr_in __jun_net_serv_addr;\n    bzero((void *) &__jun_net_serv_addr, sizeof(__jun_net_serv_addr));\n    __jun_net_serv_addr.sin_family = AF_INET;\n    __jun_net_serv_addr.sin_addr.s_addr = INADDR_ANY;\n    __jun_net_serv_addr.sin_port = htons((HEARTBEAT_RECEIVE_PORT));\n    if (bind((sockfd), (struct sockaddr *) &__jun_net_serv_addr,sizeof(__jun_net_serv_addr)) < 0) {\n        perror(\"ERROR on binding, receiveMessage\");\n        ERROR(\"%d\\n\", __LINE__);\n    }\n    if(listen((sockfd),(MAX_CONN_COUNT)) < 0) {\n        perror(\"listen, receiveMessage\");\n        ERROR(\"%d\\n\", __LINE__);\n    }\n\n    \n    while(1) {\n        //sockfd = get_any_tcp_connection_ready_socket(sockfd, HEARTBEAT_RECEIVE_PORT, MAX_CONN_COUNT);\n        if(sockfd < 0) {\n            ERROR(\"%s, %d\\n\", __FILE__, __LINE__);\n        }\n\n        ret = select_with_timeout(sockfd, &rfds, 5);\n        if(ret < 0) {\n            perror(\"after select\");\n            ERROR(\"%s, %d\\n\", __FILE__, __LINE__);\n        } else if (ret == 0) {\n            // timeout\n            // the other one is dead\n            status = -1;\n            needSend = 0;\n            cout << \"The other is dead\\n\";\n        } else {\n            // nothing to do\n            cout << \"go to heartbeat receive loop\\n\";\n            int cfd = accept(sockfd, (struct sockaddr *)&cli_addr, &cli_len);\n            if(cfd < 0) {\n                perror(\"It shouldn't be error\");\n            }\n            needSend = 1;\n            heartbeat_receive_loop(cfd);\n            close(cfd);\n        }\nheart_beat_accept_fail:\n        if(status < 0) {\n        }\n    }\n}\n\n\nvoid heartbeat_send() {\n    int wfd;\n    int sockfd;\n    \n\n    struct timeval timeout;\n    timeout.tv_sec = 5;  // It matter on the interval of heartbeat\n    timeout.tv_usec = 0;\n\n    struct sockaddr_in receiver_addr;\n    bzero((void *)&receiver_addr, sizeof(receiver_addr));\n    receiver_addr.sin_family = AF_INET;\n    receiver_addr.sin_addr.s_addr = inet_addr(SERVER_ADDR);\n    receiver_addr.sin_port = htons(HEARTBEAT_RECEIVE_PORT);\n\n    while(1) {\n        sockfd = socket(AF_INET, SOCK_STREAM, 0);\n        if(sockfd < 0) {\n            ERROR(\"%d\\n\", __LINE__);\n        }\n        \n        //if(setsockopt(sockfd, SOL_SOCKET, SO_SNDTIMEO, &timeout, sizeof(int)) < 0 ) {\n        //    perror(\"setopt send\");\n        //    ERROR(\"%d\\n\", __LINE__);\n        //}\n        //\n        int set = 1;\n        /*if(setsockopt(sockfd, SOL_SOCKET, SO_NOSIGPIPE, (void *)&set, sizeof(int)) < 0) {\n            perror(\"setsock  nopipe\");\n            ERROR(\"%d\\n\", __LINE__);\n        }*/\n        \n        int ret = connect_nonblock(&receiver_addr, sockfd, 5);\n        if(ret < 0) {\n            if(errno == ECONNREFUSED) {\n                cout << \"connection refused\\n\";          \n                sleep(1);\n                continue;\n            }\n\n            perror(\"connect after nonblock\");\n            ERROR(\"%d\\n\", __LINE__);\n        }\n\n        if(errno == ETIMEDOUT) {\n            // time out\n            continue;\n        }\n        \n        cout << \"go to send loop\\n\";\n        heartbeat_send_loop(sockfd);\n        cout << \"cease sending\\n\";\n        close(sockfd);\n    }\n}\n",
			"file": "heartbeat.cpp",
			"file_size": 4981,
			"file_write_time": 1404860464000000,
			"settings":
			{
				"buffer_size": 4981,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/home/evangileon/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
			"settings":
			{
				"buffer_size": 13677,
				"line_ending": "Unix"
			}
		},
		{
			"file": "net_util.cpp",
			"settings":
			{
				"buffer_size": 4138,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 79.0,
		"selected_items":
		[
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ins",
				"Package Control: Install Package"
			],
			[
				"Package Control: re",
				"Package Control: Remove Package"
			],
			[
				"Package Control: li",
				"Package Control: List Packages"
			],
			[
				"Package Control: l",
				"Package Control: List Packages"
			],
			[
				"Package Control: lis",
				"Package Control: List Packages"
			],
			[
				"Package Control: up",
				"Package Control: Upgrade Package"
			],
			[
				"Package Control: u",
				"Package Control: Upgrade Package"
			],
			[
				"py",
				"User: Python PEP8 Autoformat"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"Package Control: r",
				"Package Control: Remove Package"
			],
			[
				"go",
				"GoSublime: Goto Definition"
			],
			[
				"gosu",
				"GoSublime: Goto Definition"
			],
			[
				"gosub",
				"GoSublime: Goto Definition"
			],
			[
				"Cscope: ",
				"Cscope: Jump to function definition"
			],
			[
				"cscop",
				"Cscope: Jump to function definition"
			],
			[
				"cs",
				"Cscope: Look up symbol"
			],
			[
				"in",
				"InputHelper"
			],
			[
				"Package Control: is",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			]
		],
		"width": 579.0
	},
	"console":
	{
		"height": 153.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/evangileon/build/pascal.cpp",
		"/home/evangileon/golib/src/github.com/nsf/gocode/gocode.go",
		"/home/evangileon/golib/src/github.com/nsf/gocode/os_posix.go",
		"/home/evangileon/.config/sublime-text-2/Packages/GoSublime/USAGE.md",
		"/home/yj/build/revel/src/github.com/robfig/revel/cmd/build.go",
		"/home/yj/build/revel/src/github.com/robfig/revel/errors.go",
		"/home/yj/build/docker/commands.go",
		"/home/yj/build/revel/src/github.com/robfig/revel/util.go",
		"/home/yj/test/snake-ai/snake.py",
		"/home/yj/test/snake-ai/snake-draft.py",
		"/home/yj/.config/sublime-text-2/Packages/GoSublime/USAGE.md",
		"/home/yj/build/revel/src/github.com/robfig/revel/revel.go",
		"/home/yj/build/revel/src/github.com/robfig/revel/harness/build.go",
		"/home/yj/test/tst.go",
		"/home/yj/test/hello.py",
		"/home/yj/translation.txt",
		"/home/yj/下载/dl.php",
		"/home/yj/go/src/pkg/github.com/AlekSi/nut/nut.go",
		"/home/yj/go/src/pkg/database/sql/driver/driver.go",
		"/home/yj/go/src/pkg/errors/errors.go",
		"/home/yj/go/src/pkg/sort/sort.go",
		"/home/yj/.config/sublime-text-2/Packages/GoSublime/CHANGELOG.md",
		"/home/yj/go/src/pkg/database/sql/sql.go",
		"/home/yj/go/src/pkg/html/template/context.go",
		"/home/yj/go/src/pkg/hash/crc32/crc32.go",
		"/home/yj/go/src/pkg/strings/strings.go",
		"/home/yj/go/src/pkg/math/sin.go",
		"/home/yj/go/src/pkg/reflect/value.go",
		"/home/yj/go/src/pkg/github.com/AlekSi/test_nut3/test_nut3.go",
		"/home/yj/go/src/pkg/github.com/AlekSi/nut/Makefile",
		"/home/yj/go/src/pkg/github.com/AlekSi/nut/nut/base.go",
		"/home/yj/go/src/pkg/github.com/AlekSi/test_nut2/test_nut2.go",
		"/home/yj/.config/sublime-text-2/Packages/GoSublime/GoSublime.sublime-settings",
		"/home/yj/.config/sublime-text-2/Packages/User/GoSublime.sublime-settings",
		"/home/yj/.config/sublime-text-2/Packages/Go/Go.tmLanguage",
		"/home/yj/.config/sublime-text-2/Packages/Go/If Statement.tmSnippet",
		"/home/yj/.config/sublime-text-2/Packages/Go/type.tmSnippet",
		"/home/yj/.config/sublime-text-2/Packages/Go/go func().tmSnippet",
		"/home/yj/.config/sublime-text-2/Packages/Go/Comments.tmPreferences",
		"/home/yj/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
		"/home/yj/.config/sublime-text-2/Packages/User/JSON.sublime-settings",
		"/home/yj/build/dea-1.4/my-lisps/cedet/common/cedet-settings.el",
		"/home/yj/go/src/pkg/code.google.com/p/gowut/examples/showcase.go",
		"/home/yj/go/src/pkg/code.google.com/p/gowut/gwu/comp.go",
		"/home/yj/go/src/pkg/code.google.com/p/gowut/gwu/event.go",
		"/host/TDDOWNLOAD/mBookMaker/mBookMaker/酷全书/仪式.txt",
		"/home/yj/下载/艾西莫夫-第二基地.txt",
		"/home/yj/build/dea-1.4/my-lisps/dev-settings.el",
		"/home/yj/build/dea-1.4/my-lisps/my-subdirs.el",
		"/home/yj/.emacs",
		"/home/yj/build/dea-1.4/lisps/cedet/lisp/cedet/semantic/imenu.el",
		"/home/yj/build/dea-1.4/my-lisps/dired-x-settings.el",
		"/home/yj/build/dea-1.4/lisps/yasnippet/yasnippet.el",
		"/home/yj/build/dea-1.4/lisps/cedet/lisp/cedet/ede/base.el",
		"/home/yj/build/dea-1.4/lisps/cedet/lisp/cedet/semantic/db-find.el",
		"/home/yj/build/dea-1.4/my-lisps/yasnippet-settings-0.8.el",
		"/home/yj/build/dea-1.4/lisps/cedet/lisp/cedet/semantic/find-db.el",
		"/home/yj/build/dea-1.4/lisps/cedet/lisp/cedet/semantic/db.el",
		"/home/yj/build/dea-1.4/my-lisps/yasnippet-settings-github.el",
		"/home/yj/build/dea-1.4/my-lisps/yasnippet-settings.el",
		"/home/yj/build/dea-1.4/my-lisps/pulse-settings.el",
		"/home/yj/build/dea-1.4/my-lisps/dired-settings.el",
		"/home/yj/build/luajit-2.0/src/lualib.h",
		"/home/yj/build/dea-1.4/my-lisps/cedet/semantic/cedet-semantic-settings.el",
		"/home/yj/build/dea-1.4/lisps/imenu-tree.el",
		"/home/yj/build/dea-1.4/lisps/pcase/pcase.el",
		"/home/yj/build/dea-1.4/lisps/debug/debug.el",
		"/home/yj/build/dea-1.4/lisps/cedet/cedet-devel-load.el",
		"/home/yj/build/luajit-2.0/src/host/minilua.c",
		"/home/yj/build/luajit-2.0/src/lj_api.c",
		"/home/yj/build/luajit-2.0/src/luajit.c",
		"/home/yj/.config/sublime-text-2/Packages/Cscope/Default (Linux).sublime-keymap",
		"/home/yj/.config/sublime-text-2/Packages/User/Preferences.sublime-settings",
		"/home/yj/.config/sublime-text-2/Packages/CTags/CTags.sublime-settings",
		"/home/yj/test.rb",
		"/home/yj/go/src/pkg/github.com/nsf/gocode/rpc.go",
		"/home/yj/go/src/pkg/github.com/nsf/gocode/client.go",
		"/home/yj/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
		"/home/yj/.config/sublime-text-2/Packages/GoSublime/Default (Linux).sublime-keymap",
		"/home/yj/go/src/pkg/github.com/nsf/gocode/autocompletecontext.go",
		"/home/yj/go/src/pkg/github.com/nsf/gocode/gocode.go",
		"/home/yj/.config/sublime-text-2/Packages/SideBarEnhancements/Side Bar.sublime-settings",
		"/home/yj/go/src/pkg/code.google.com/p/goprotobuf/proto/decode.go",
		"/home/yj/Build/arm-dev/camera/camera.c",
		"/home/yj/Build/arm-dev/include/common.h",
		"/home/yj/go/src/pkg/flag/flag.go",
		"/home/yj/go/misc/goplay/goplay.go",
		"/home/yj/go/src/pkg/os/exec.go",
		"/home/yj/.config/sublime-text-2/Packages/SideBarEnhancements/messages/11.13.2012.1305.0.txt",
		"/home/yj/go/src/pkg/code.google.com/p/goprotobuf/proto/encode.go",
		"/home/yj/wayland/cairo/aclocal.m4",
		"/home/yj/go/src/pkg/code.google.com/p/goprotobuf/proto/lib.go",
		"/home/yj/go/src/pkg/code.google.com/p/goprotobuf/proto/message_set.go",
		"/home/yj/go/src/pkg/github.com/ha/doozer/conn.go",
		"/home/yj/go/src/pkg/github.com/ha/doozerd/server/txn.go",
		"/home/yj/wayland/pixman/pixman/pixman-glyph.c",
		"/home/yj/Build/v2ex/backstage.py",
		"/home/yj/wayland/pixman/pixman/pixman-private.h",
		"/home/yj/wayland/pixman/pixman/pixman-compiler.h",
		"/home/yj/wayland/cairo/Makefile",
		"/home/yj/wayland/cairo/Makefile.am",
		"/home/yj/wayland/pixman/pixman/pixman.h",
		"/home/yj/wayland/cairo/Makefile.in",
		"/home/yj/Build/thrift-0.9.0/lib/go/thrift/ttransport.go",
		"/home/yj/go/go-test.go",
		"/home/yj/go/src/pkg/github.com/robfig/revel/cmd/run.go",
		"/home/yj/go/src/pkg/github.com/robfig/revel/samples/chat/app/chatroom/chatroom.go",
		"/home/yj/Build/thrift-0.9.0/lib/go/thrift/tbinary_protocol.go",
		"/home/yj/go/test/named.go",
		"/home/yj/go/test/index.go",
		"/home/yj/go/test/cmp.go",
		"/host/goagent/local/proxy.py",
		"/home/yj/go/misc/emacs/go-mode-load.el",
		"/home/yj/go/test/bench/garbage/parser.go",
		"/home/yj/go/test/run.go",
		"/home/yj/go/test/goto.go",
		"/home/yj/go/src/pkg/runtime/thread_linux.c",
		"/home/yj/Build/dea-1.4/lisps/golang/go-mode.el",
		"/home/yj/Build/dea-1.4/lisps/xref/xrefsetup",
		"/home/yj/Build/dea-1.4/lisps/org/org-src.el",
		"/media/F8FE85B4FE856C26/Users/yj/Desktop/~~~大白本/NO.2-NO.9--text/tn2-3.txt",
		"/home/yj/go/test/dwarf/main.go",
		"/home/yj/go/src/pkg/github.com/mattn/go-sqlite3/sqlite3.go",
		"/home/yj/go/src/pkg/go/build/build.go",
		"/home/yj/Build/dea-1.4/my-lisps/rails-settings.el",
		"/home/yj/Build/dea-1.4/my-lisps/dev-settings.el",
		"/home/yj/go/src/cmd/gc/walk.c",
		"/home/yj/go/src/cmd/8c/gc.h"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"func",
			"EMPTY_EHANDLER",
			"semanticdb-abstract-table",
			"semanticdb-abstract-table-list",
			"semanticdb-abstract-table",
			"semanticdb-abstract-table-list",
			"yas-expand-from-trigger-key",
			"trigger-key",
			"default",
			"ignore",
			"semantic",
			"cedet",
			"require 'imenu",
			"(eval-when-compile (require 'cl))",
			"pcase",
			"ctrl+r",
			"}\n",
			"side bar",
			"commandLine",
			"AM_MAKEFLAGS",
			"all-recursive",
			"MAKE",
			"all-recursive",
			"MAKE",
			"PIXMAN_EXPORT",
			"\\\\",
			"mathcall",
			"sqrt",
			"yas-trigger-key",
			"trigger-key",
			"unbind-trigger-key",
			"yas-snippet-dirs",
			"snippet-dirs",
			"reload-after-save",
			"load-snippet-buffer",
			"yas-trigger-key",
			"imenu",
			"menu",
			"yas-minor-mode",
			"/",
			"yas/minor-mode",
			"trigger-key-reload",
			"trigger-key",
			"find-snippets",
			"yas/",
			"yas/minor",
			"yas/minor-mode-map",
			"minor-mode",
			";; check",
			";;check",
			";;check if vedet-version is correct  ",
			";; check if vedet-version is correct  ",
			"find",
			"side_bar",
			"tags",
			"3342"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"-",
			"3242"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "heartbeat.cpp",
					"settings":
					{
						"buffer_size": 4981,
						"regions":
						{
						},
						"selection":
						[
							[
								1117,
								1117
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 927.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/home/evangileon/.config/sublime-text-2/Packages/Default/Preferences.sublime-settings",
					"settings":
					{
						"buffer_size": 13677,
						"regions":
						{
						},
						"selection":
						[
							[
								7716,
								7716
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "net_util.cpp",
					"settings":
					{
						"buffer_size": 4138,
						"regions":
						{
						},
						"selection":
						[
							[
								291,
								291
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close"
							],
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 37.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.9o:///home/yj/test":
	{
		"height": 126.0
	},
	"output.GoSublime-source-output":
	{
		"height": 126.0
	},
	"output.GsDepends-output":
	{
		"height": 124.0
	},
	"output.MarGo-output":
	{
		"height": 126.0
	},
	"output.exec":
	{
		"height": 120.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 217.0,
	"status_bar_visible": true
}
